<h1>Showing route {{value.name}}</h1>

<dl>
  <dt>Url</dt>
  <dd>
    {{#if value.url}}
      <code>{{value.url}}</code>
    {{else}}
      <p class='text-danger'><strong>This route has no URL</strong>, as it is a parent route. You will always be in a child state of this route (e.g. <code>{{value.name}}.index</code>)</p>
    {{/if}}
  </dd>
  <dt>Type</dt>
  <dd>{{value.type}}</dd>
  <dt>Route Class</dt>
  <dd><code>App.{{value.routeHandler.className}}</code></dd>
  <dt>Controller</dt>
  <dd><code>App.{{value.controller.className}}</code></dd>
  <dt>Template</dt>
  <dd><code>{{value.template.name}}</code></dd>
  <dt>Template Outline</dt>
  <dd>
    <p>This is what the nested templates look like for this route. All templates shown below will be visible <em>at the same time</em> when you are in this route:</p>
    {{template-visualization parents=parentsAndSelf isShowingSubStates=isShowingSubStates}}
  </dd>
  {{#if value.url}}
    <dt>Route Hooks</dt>
    <dd>
      <p>When you visit <code>{{value.url}}</code>, these are the route hooks that will be called:</p>
      <h3>1. Validation Phase</h3>
      <p>First all of these model hooks will be called in this order:</p>
      <ol>
        {{#each parentsAndSelf}}
          {{validation-hooks route=this}}
        {{/each}}
      </ol>
      <h3>2. Setup Phase</h3>
      <p>If none of the model hooks abort the transition, either by calling <code>transition.abort()</code> or <code>this.transitionTo('someOtherRoute')</code>, then these setup hooks will be called in this order after all the validation hooks have run:</p>
      <ol>
        {{#each parentsAndSelf}}
          {{setup-hooks route=this}}
        {{/each}}
      </ol>
    </dd>
  {{/if}}
</dl>
